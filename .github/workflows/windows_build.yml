name: Windows Build

on:
  workflow_dispatch:
  push:
    branches:
      - 'master'
    tags:
      - 'v*'
  pull_request:
    branches:
    - 'master'

defaults:
  run:
    shell: cmd

env:
  SOURCE_DIR:   ${{ github.workspace }}
  QT_VERSION:   5.15.2
  ARTIFACT:     glr-database-windows

jobs:
  build:
    runs-on:  windows-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: recursive
          
      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version:      ${{ env.QT_VERSION }}
          host:         windows
          target:       desktop
          dir:          ${{ runner.temp }}
          modules:      qtcharts
          setup-python: false

#      - name: Download JOM
#        uses: suisei-cn/actions-download-file@v1
#        with:
#          url:    http://download.qt.io/official_releases/jom/jom.zip
#          target: ${{ runner.temp }}\
#
#      - name: Unzip JOM
#        working-directory: ${{ runner.temp }}
#        run:  |
#              7z x jom.zip -ojom
#
#               In build 
#              ${{ runner.temp }}\jom\jom -j2
#
#      - name: Create build directory
#        run:  mkdir ${{ runner.temp }}\build
#
#      - name: Set up Visual Studio shell
#        uses: egor-tensin/vs-shell@v2
#        with:
#          arch: x64

      - name: Build
        working-directory: ${{ runner.temp }}
        run:  |
              mkdir ${{ runner.temp }}\build
              cd build
              qmake -r ${{ env.SOURCE_DIR }}\glr-database.pro
              make
              cd release
              windeployqt --qmldir ${{ env.SOURCE_DIR }} glr-database.exe --pdb --release --compiler-runtime
              copy C:\Windows\System32\concrt140.dll . 
              copy C:\Windows\System32\vccorlib140.dll .
              copy C:\Windows\System32\msvcp140.dll .
              copy C:\Windows\System32\vcruntime140.dll .
              
      - name: Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT }}
          path: ${{ runner.temp }}\build\release\*
